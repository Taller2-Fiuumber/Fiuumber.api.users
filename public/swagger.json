{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Fiuumber User API",
        "description": "CRUD",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [{
            "url": "https://fiuumber-api-users.herokuapp.com/api/users-service",
            "description": "Heroku"
        },
        {
            "url": "http://localhost:8081/api/users-service",
            "description": "Localhost in port 8081"
        }
    ],
    "tags": [{
        "name": "Fiuumber - Users",
        "description": "API for users in the system"
    }],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/user/blocked/amount": {
            "get": {
                "tags": [
                    "Block Users"
                ],
                "summary": "Amount of block users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/user/driver/blocked/amount": {
            "get": {
                "tags": [
                    "Block Users"
                ],
                "summary": "Amount of block users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/user/passenger/blocked/amount": {
            "get": {
                "tags": [
                    "Block Users"
                ],
                "summary": "Amount of block users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },

        "/user/{id}/blocked": {
            "post": {
                "tags": [
                    "Block Users"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "id",
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "summary": "Block user by userId",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Block Users"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "id",
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "summary": "Unblock user by userId",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/users/login?email={email}&password={password}": {
            "get": {
                "tags": [
                    "Login"
                ],
                "parameters": [{
                        "in": "path",
                        "name": "password",
                        "required": true,
                        "description": "Password",
                        "schema": {
                            "type": "string",
                            "example": "12345678"
                        }
                    },
                    {
                        "in": "path",
                        "name": "email",
                        "required": true,
                        "description": "Email",
                        "schema": {
                            "type": "string",
                            "example": "acai@fi.uba.ar"
                        }
                    }
                ],
                "summary": "Login user with mail and password",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/users/loginGoogle?id={id}": {
            "get": {
                "tags": [
                    "Login"
                ],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User id",
                        "schema": {
                            "type": "string",
                            "example": "2"
                        }
                    }
                ],
                "summary": "Login user Google and id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/administrators/login?email={email}&password={password}": {
            "get": {
                "tags": [
                    "Login"
                ],
                "parameters": [{
                        "in": "path",
                        "name": "password",
                        "required": true,
                        "description": "Password",
                        "schema": {
                            "type": "string",
                            "example": "1234shhh"
                        }
                    },
                    {
                        "in": "path",
                        "name": "email",
                        "required": true,
                        "description": "Email",
                        "schema": {
                            "type": "string",
                            "example": "acai@fi.uba.ar"
                        }
                    }
                ],
                "summary": "Login administrator with mail and password",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/user/page/{skip}&{take}": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [{
                        "in": "path",
                        "name": "skip",
                        "required": true,
                        "description": "Number of users to skip",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "in": "path",
                        "name": "take",
                        "required": true,
                        "description": "Number of users to take",
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "summary": "Get users with given ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/vehicle/page/{skip}&{take}": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "parameters": [{
                        "in": "path",
                        "name": "skip",
                        "required": true,
                        "description": "Number of vehicles to skip",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "in": "path",
                        "name": "take",
                        "required": true,
                        "description": "Number of vehicles to take",
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "summary": "Get vehicles with given ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Vehicle"
                        }
                    },
                    "404": {
                        "description": "Failed. Vehicle not found."
                    }
                }
            }
        },
        "/driver-vehicle/page/{skip}&{take}": {
            "get": {
                "tags": [
                    "DriverVehicle"
                ],
                "parameters": [{
                        "in": "path",
                        "name": "skip",
                        "required": true,
                        "description": "Number of driverVehicle to skip",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "in": "path",
                        "name": "take",
                        "required": true,
                        "description": "Number of vehicles to take",
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "summary": "Get vehicles with given ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DriverVehicle"
                        }
                    },
                    "404": {
                        "description": "Failed. DriverVehicle not found."
                    }
                }
            }
        },
        "/driver/page/{skip}&{take}": {
            "get": {
                "tags": [
                    "Driver"
                ],
                "parameters": [{
                        "in": "path",
                        "name": "skip",
                        "required": true,
                        "description": "Number of drivers to skip",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "in": "path",
                        "name": "take",
                        "required": true,
                        "description": "Number of drivers to take",
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "summary": "Get drivers with given ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Driver"
                        }
                    },
                    "404": {
                        "description": "Failed. Drivers not found."
                    }
                }
            }
        },
        "/passenger/page/{skip}&{take}": {

            "get": {
                "tags": [
                    "Passenger"
                ],
                "parameters": [{
                        "in": "path",
                        "name": "skip",
                        "required": true,
                        "description": "Number of passengers to skip",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "in": "path",
                        "name": "take",
                        "required": true,
                        "description": "Number of passengers to take",
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "summary": "Get administrator with given ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Passenger"
                        }
                    },
                    "404": {
                        "description": "Failed. Passengers not found."
                    }
                }
            }
        },
        "/administrator/page/{skip}&{take}": {

            "get": {
                "tags": [
                    "Administrator"
                ],
                "parameters": [{
                        "in": "path",
                        "name": "skip",
                        "required": true,
                        "description": "Number of administrators to skip",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "in": "path",
                        "name": "take",
                        "required": true,
                        "description": "Number of administrators to take",
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "summary": "Get administrator with given ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "404": {
                        "description": "Failed. Administrator not found."
                    }
                }
            }
        },
        "/administrator/{id}": {
            "parameters": [{
                "in": "path",
                "name": "id",
                "required": true,
                "description": "Administrator id",
                "schema": {
                    "type": "integer",
                    "example": 1
                }
            }],
            "get": {
                "tags": [
                    "Administrator"
                ],
                "summary": "Get administrator with given ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Administrator id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "404": {
                        "description": "Failed. Administrator not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete administrator with given ID",
                "tags": [
                    "Administrator"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Administrator id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Administrator not found."
                    }
                }
            }
        },

        "/administrator": {
            "get": {
                "tags": [
                    "Administrator"
                ],
                "summary": "Get all administrator in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    }
                }
            },

            "post": {
                "tags": [
                    "Administrator"
                ],
                "summary": "Create a new administrator in system",
                "requestBody": {
                    "description": "Administrator Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Administrator"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            },
            "put": {
                "summary": "Update administrator with given ID",
                "tags": [
                    "Administrator"
                ],
                "requestBody": {
                    "description": "Administrator Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Administrator"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Administrator not found."
                    }
                }
            }
        },
        "/vehicle/{id}": {
            "parameters": [{
                "in": "path",
                "name": "id",
                "required": true,
                "description": "Vehicle id",
                "schema": {
                    "type": "integer",
                    "example": 1
                }
            }],
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get vehicle with given ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Vehicle id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Vehicle"
                        }
                    },
                    "404": {
                        "description": "Failed. Vehicle not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete vehicle with given ID",
                "tags": [
                    "Vehicle"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Vehicle id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Vehicle not found."
                    }
                }
            }
        },

        "/vehicle": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Get all vehicles in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Vehicle"
                        }
                    }
                }
            },

            "post": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Create a new vehicle in system",
                "requestBody": {
                    "description": "Vehicle Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Vehicle"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/driver-vehicle/{id}": {
            "parameters": [{
                "in": "path",
                "name": "id",
                "required": true,
                "description": "Driver vehicle id",
                "schema": {
                    "type": "integer",
                    "example": 1
                }
            }],
            "get": {
                "tags": [
                    "DriverVehicle"
                ],
                "summary": "Get vehicle with given ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Driver id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Driver"
                        }
                    },
                    "404": {
                        "description": "Failed. DriverVehicle not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete driver vehicle with given ID",
                "tags": [
                    "DriverVehicle"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "DriverVehicle id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Vehicle not found."
                    }
                }
            }
        },

        "/driver-vehicle": {
            "get": {
                "tags": [
                    "DriverVehicle"
                ],
                "summary": "Get all driver vehicles in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DriverVehicle"
                        }
                    }
                }
            },

            "post": {
                "tags": [
                    "DriverVehicle"
                ],
                "summary": "Create a new driver vehicle in system",
                "requestBody": {
                    "description": "Vehicle Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/DriverVehicle"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/{accountType}": {
            "parameters": [{
                "in": "path",
                "name": "accountType",
                "required": true,
                "description": "accountType like GOOGLE and EMAIL",
                "schema": {
                    "type": "accountType",
                    "example": "EMAIL"
                }
            }],
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users ofa particular accountType",
                "parameters": [{
                    "in": "path",
                    "name": "accountType",
                    "required": true,
                    "description": "Users accountType",
                    "schema": {
                        "type": "string",
                        "example": "GOOGLE"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "User"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/user/check-if-exists/{email}": {
            "parameters": [{
                "in": "path",
                "name": "email",
                "required": true,
                "description": "User id",
                "schema": {
                    "type": "string",
                    "example": "acai@fi.uba.ar"
                }
            }],
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Check if email is already registered",
                "parameters": [{
                    "in": "path",
                    "name": "email",
                    "required": true,
                    "description": "User email",
                    "schema": {
                        "type": "string",
                        "example": "acai@fi.uba.ar"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/user/{id}": {
            "parameters": [{
                "in": "path",
                "name": "id",
                "required": true,
                "description": "User id",
                "schema": {
                    "type": "integer",
                    "example": 1
                }
            }],
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user with given ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "User id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete user with given ID",
                "tags": [
                    "User"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Passenger id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        },
        "/passengers/count": {
            "get": {
                "tags": [
                    "Passenger"
                ],
                "summary": "Get amount of passengers in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    }
                }
            }
        },
        "/drivers/count": {
            "get": {
                "tags": [
                    "Driver"
                ],
                "summary": "Get amount of drivers in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    }
                }
            }
        },
        "/administrators/count": {
            "get": {
                "tags": [
                    "Administrator"
                ],
                "summary": "Get all administrators in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    }
                }
            }
        },
        "/passenger": {
            "get": {
                "tags": [
                    "Passenger"
                ],
                "summary": "Get all passengers in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Passenger"
                        }
                    }
                }
            },

            "post": {
                "tags": [
                    "Passenger"
                ],
                "summary": "Create a new passenger in system",
                "requestBody": {
                    "description": "Passenger Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Passenger"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            },
            "put": {
                "summary": "Update passenger with given ID",
                "tags": [
                    "Passenger"
                ],
                "requestBody": {
                    "description": "Passenger Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Passenger"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Passenger"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Passenger not found."
                    }
                }
            }
        },
        "/passenger/{id}": {
            "parameters": [{
                "in": "path",
                "name": "id",
                "required": true,
                "description": "Passenger id",
                "schema": {
                    "type": "integer",
                    "example": 1
                }
            }],
            "get": {
                "tags": [
                    "Passenger"
                ],
                "summary": "Get user with given ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Passenger id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Passenger"
                        }
                    },
                    "404": {
                        "description": "Failed. Passenger not found."
                    }
                }
            }
        },

        "/driver": {
            "get": {
                "tags": [
                    "Driver"
                ],
                "summary": "Get all drivers in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Driver"
                        }
                    }
                }
            },

            "post": {
                "tags": [
                    "Driver"
                ],
                "summary": "Create a new driver in system",
                "requestBody": {
                    "description": "Driver Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Driver"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            },
            "put": {
                "summary": "Update driver with given ID",
                "tags": [
                    "Driver"
                ],
                "requestBody": {
                    "description": "Driver Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Driver"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Driver"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Driver not found."
                    }
                }
            }
        },
        "/driver/{id}": {
            "parameters": [{
                "in": "path",
                "name": "id",
                "required": true,
                "description": "Passenger id",
                "schema": {
                    "type": "integer",
                    "example": 1
                }
            }],
            "get": {
                "tags": [
                    "Driver"
                ],
                "summary": "Get driver with given ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Driver id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Driver"
                        }
                    },
                    "404": {
                        "description": "Failed. Driver not found."
                    }
                }
            }
        },
        "/users/logIn/count-per-day-last-days?day={day}&numberOfDays={numberOfDays}": {

            "get": {
                "tags": [
                    "Metricas"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "day",
                        "required": true,
                        "description": "Last day of range",
                        "schema": {
                            "type": "string",
                            "example": "10/12/22"
                        }
                    },
                    {
                        "in": "path",
                        "name": "numberOfDays",
                        "required": true,
                        "description": "Number of days in range",
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "summary": "Get count of logins in a range ending at last day",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    },
                    "404": {
                        "description": "Failed."
                    }
                }
            }
        },
        "/users/signIn/count-per-day-last-days?day={day}&numberOfDays={numberOfDays}": {

            "get": {
                "tags": [
                    "Metricas"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "day",
                        "required": true,
                        "description": "Last day of range",
                        "schema": {
                            "type": "string",
                            "example": "10/12/22"
                        }
                    },
                    {
                        "in": "path",
                        "name": "numberOfDays",
                        "required": true,
                        "description": "Number of days in range",
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "summary": "Get count of signins in a range ending at last day",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    },
                    "404": {
                        "description": "Failed."
                    }
                }
            }
        },

        "/users/logInGoogle/count-per-day-last-days?day={day}&numberOfDays={numberOfDays}": {

            "get": {
                "tags": [
                    "Metricas"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "day",
                        "required": true,
                        "description": "Last day of range",
                        "schema": {
                            "type": "string",
                            "example": "10/12/22"
                        }
                    },
                    {
                        "in": "path",
                        "name": "numberOfDays",
                        "required": true,
                        "description": "Number of days in range",
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "summary": "Get count of logins with Google in a range ending at last day",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    },
                    "404": {
                        "description": "Failed."
                    }
                }
            }
        },
        "/users/signInGoogle/count-per-day-last-days?day={day}&numberOfDays={numberOfDays}": {

            "get": {
                "tags": [
                    "Metricas"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "day",
                        "required": true,
                        "description": "Last day of range",
                        "schema": {
                            "type": "string",
                            "example": "10/12/22"
                        }
                    },
                    {
                        "in": "path",
                        "name": "numberOfDays",
                        "required": true,
                        "description": "Number of days in range",
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "summary": "Get count of signins with Google in a range ending at last day",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/count"
                        }
                    },
                    "404": {
                        "description": "Failed."
                    }
                }
            }
        }, 
        "/report": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get all reports in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Create a new report in system",
                "requestBody": {
                    "description": "Report Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Report"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }

        },
        "/report/driver/{id}": {
            "parameters": [{
                "in": "path",
                "name": "id",
                "required": true,
                "description": "Driver id",
                "schema": {
                    "type": "integer",
                    "example": 1
                }
            }],
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get report with given driver ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Driver id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    },
                    "404": {
                        "description": "Failed. Driver not found."
                    }
                }
            }

        },
        "/report/driver/amount/{id}": {
            "parameters": [{
                "in": "path",
                "name": "id",
                "required": true,
                "description": "Driver id",
                "schema": {
                    "type": "integer",
                    "example": 1
                }
            }],
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get amount of reports by given driver ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Driver id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    },
                    "404": {
                        "description": "Failed. Driver not found."
                    }
                }
            }
            
        },
        "/report/passenger/{id}": {
            "parameters": [{
                "in": "path",
                "name": "id",
                "required": true,
                "description": "Passenger id",
                "schema": {
                    "type": "integer",
                    "example": 1
                }
            }],
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get report with given passenger ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Passenger id",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    },
                    "404": {
                        "description": "Failed. Passenger not found."
                    }
                }
            }
            
        }
    },

    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "Administrator": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "acai@fi.uba.ar"
                },
                "firstName": {
                    "type": "string",
                    "example": "Ana"
                },
                "lastName": {
                    "type": "string",
                    "example": "Cai"
                },
                "password": {
                    "type": "string",
                    "example": "1234shhh"
                }
            }
        },
        "Vehicle": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "example": 1
                },
                "brand": {
                    "type": "string",
                    "example": "ROLLS ROYCE"
                },
                "model": {
                    "type": "string",
                    "example": "PHANTOM"
                },
                "image": {
                    "type": "string",
                    "example": "https://www.chevrolet.com.ar/content/dam/chevrolet/mercosur/argentina/espanol/index/cars/2020-onix-premier/colorizer/01-images/julio-20/2-onix-premier-seeker-met-5.png?imwidth=960"
                }
            }
        },
        "DriverVehicle": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "example": 1
                },
                "domain": {
                    "type": "string",
                    "example": "1219 allowSyntheticDefaultImports"
                },
                "modelYear": {
                    "type": "string",
                    "example": "1998"
                },
                "colorName": {
                    "type": "string",
                    "example": "red"
                },
                "vehicle": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "example": "2353"
                        },
                        "brand": {
                            "type": "string",
                            "example": "ROLLS ROYCE"
                        },
                        "model": {
                            "type": "string",
                            "example": "PHANTOM"
                        },
                        "image": {
                            "type": "string",
                            "example": "https://www.chevrolet.com.ar/content/dam/chevrolet/mercosur/argentina/espanol/index/cars/2020-onix-premier/colorizer/01-images/julio-20/2-onix-premier-seeker-met-5.png?imwidth=960"
                        }
                    }
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "number",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "acai@fi.uba.ar"
                },
                "firstName": {
                    "type": "boolean",
                    "example": "Ana"
                },
                "lastName": {
                    "type": "string",
                    "example": "Cai"
                },
                "address": {
                    "type": "string",
                    "example": "Tucuman 111"
                },
                "password": {
                    "type": "string",
                    "example": "fasbf62823hd91d019dj12j1209j09j90"
                },
                "username": {
                    "type": "string",
                    "example": "anichucai"
                },
                "blocked": {
                    "type": "boolean",
                    "example": false
                },
                "accountType": {
                    "type": "string",
                    "example": "EMAIL"
                }
            }
        },
        "count": {
            "type": "number"
        },
        "Passenger": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "number",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "acai@fi.uba.ar"
                },
                "firstName": {
                    "type": "boolean",
                    "example": "Ana"
                },
                "lastName": {
                    "type": "string",
                    "example": "Cai"
                },
                "address": {
                    "type": "string",
                    "example": "Tucuman 111"
                },
                "password": {
                    "type": "string",
                    "example": "fasbf62823hd91d019dj12j1209j09j90"
                },
                "username": {
                    "type": "string",
                    "example": "anichucai"
                },
                "blocked": {
                    "type": "boolean",
                    "example": false
                },
                "accountType": {
                    "type": "string",
                    "example": "EMAIL"
                }
            }
        },
        "Driver": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "number",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "acai@fi.uba.ar"
                },
                "firstName": {
                    "type": "boolean",
                    "example": "Ana"
                },
                "lastName": {
                    "type": "string",
                    "example": "Cai"
                },
                "address": {
                    "type": "string",
                    "example": "Tucuman 111"
                },
                "password": {
                    "type": "string",
                    "example": "fasbf62823hd91d019dj12j1209j09j90"
                },
                "username": {
                    "type": "string",
                    "example": "anichucai"
                },
                "blocked": {
                    "type": "boolean",
                    "example": false
                },
                "accountType": {
                    "type": "string",
                    "example": "GOOGLE"
                },
                "vehicle": {
                    "type": "object",
                    "properties": {
                        "domain": {
                            "type": "string",
                            "example": "218 GSS"
                        },
                        "modelYear": {
                            "type": "string",
                            "example": "2021"
                        },
                        "colorName": {
                            "type": "string",
                            "example": "blue"
                        },
                        "vehicle": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "2353"
                                },
                                "brand": {
                                    "type": "string",
                                    "example": "ROLLS ROYCE"
                                },
                                "model": {
                                    "type": "string",
                                    "example": "PHANTOM"
                                },
                                "image": {
                                    "type": "string",
                                    "example": "https://www.chevrolet.com.ar/content/dam/chevrolet/mercosur/argentina/espanol/index/cars/2020-onix-premier/colorizer/01-images/julio-20/2-onix-premier-seeker-met-5.png?imwidth=960"
                                }
                            }
                        }
                    }
                }

            }
        },
        "Report": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "example": 1
                },
                "driverId": {
                    "type": "number",
                    "example": 2
                },
                "passengerId": {
                    "type": "number",
                    "example": 3
                },
                "reason": {
                    "type": "string",
                    "example": "Mean"
                }
            }
        }
    }
}

